# Generated by Django 3.1.3 on 2020-11-26 16:30

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_name', models.CharField(max_length=100, unique=True, verbose_name='User name')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('age', models.PositiveSmallIntegerField(default=0, verbose_name='Age')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('avatar', models.ImageField(upload_to='users/', verbose_name='Avatar')),
            ],
            options={
                'verbose_name': 'Users',
                'verbose_name_plural': 'User',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_name', models.CharField(max_length=100, unique=True, verbose_name='User name')),
                ('first_name', models.CharField(error_messages={'blank': 'Cant be empty'}, max_length=250, verbose_name="doctor's first name")),
                ('second_name', models.CharField(error_messages={'blank': 'Cant be empty'}, max_length=250, verbose_name="doctor's second name")),
                ('bio', models.TextField(verbose_name="doctor's biography")),
                ('diploma', models.ImageField(upload_to='doc_diploma/', verbose_name="doctor's diplomas")),
                ('avatar', models.ImageField(upload_to='doc_avatar/', verbose_name="doctor's photo")),
                ('date_of_registration', models.DateTimeField(default=datetime.date.today, verbose_name="doctor's date of registration")),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Doctors',
                'verbose_name_plural': 'Doctor',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Rehab', 'Rehabilitator'), ('Physio', 'Physiotherapist'), ('Mass', 'Masseur'), ('Train', 'Trainer')], default='instructor', max_length=13, verbose_name="doctor's profession")),
            ],
            options={
                'verbose_name': 'Professions',
                'verbose_name_plural': 'Profession',
            },
        ),
        migrations.CreateModel(
            name='RatingStar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(default=0, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Star rating',
                'verbose_name_plural': 'Stars rating',
                'ordering': ['-value'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1000, verbose_name='Description')),
                ('price', models.IntegerField(verbose_name='Price for this service')),
            ],
            options={
                'verbose_name': 'Services',
                'verbose_name_plural': 'Service',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=15, verbose_name='IP')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='doctors.doctor', verbose_name='doctor')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.ratingstar', verbose_name='star')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='profession',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.profession', verbose_name='Profession'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='service',
            field=models.ManyToManyField(to='doctors.Service'),
        ),
        migrations.AddField(
            model_name='user',
            name='service',
            field=models.ManyToManyField(to='doctors.Service'),
        ),
    ]
